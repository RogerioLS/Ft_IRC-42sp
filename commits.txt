# Guia de Commits para a Implementação dos Comandos IRC
#
# Instruções: Copie e cole cada bloco de comando (git add + git commit)
# em seu terminal para criar os commits de forma organizada.

# --- Commit 1: Refatoração e Preparação do Ambiente ---
# Prepara a base para os novos comandos. Introduz o CommandHandler,
# integra o sistema de Debug ao Server e adiciona um utilitário
# para compatibilidade com C++98.

git add sources/main.cpp includes/server/Server.hpp sources/server/Server.cpp includes/utils/Utils.hpp sources/utils/Utils.cpp
git commit -m "refactor: Prepare server for command handling

- Integrates the Debug class into the Server constructor for dependency injection.
- Adds CommandHandler and Debug member variables to the Server class.
- Creates a C++98-compatible `utils::intToString` function to replace std::to_string.
- Establishes the basic structure for the CommandHandler."


# --- Commit 2: Implementação do Comando JOIN ---
# Adiciona a funcionalidade do comando JOIN, permitindo que usuários
# entrem e criem canais.

git add includes/command/CommandHandler.hpp sources/command/CommandHandler.cpp
git commit -m "feat(command): Implement JOIN command

- Adds the `_handleJoin` function to the CommandHandler.
- Logic handles both creating a new channel and joining an existing one.
- The user who creates the channel is automatically set as an operator."


# --- Commit 3: Implementação do Comando PRIVMSG ---
# Adiciona a funcionalidade de mensagens privadas para usuários e canais.

git add includes/command/CommandHandler.hpp sources/command/CommandHandler.cpp includes/server/Server.hpp sources/server/Server.cpp
git commit -m "feat(command): Implement PRIVMSG command

- Adds the `_handlePrivmsg` function to the CommandHandler.
- Implements logic to send messages to both channels (#target) and users.
- Adds `getClientByNickname` and `getClientById` to the Server to find message recipients."


# --- Commit 4: Implementação do Comando TOPIC ---
# Adiciona a funcionalidade para ver e definir o tópico de um canal.

git add includes/command/CommandHandler.hpp sources/command/CommandHandler.cpp includes/server/Server.hpp sources/server/Server.cpp
git commit -m "feat(command): Implement TOPIC command

- Adds the `_handleTopic` function to the CommandHandler.
- Implements logic to view the current topic or set a new one.
- Adds `_serverName` to the Server class for use in IRC numeric replies.
- Checks for operator privileges (`+t` mode) before allowing a topic change."


# --- Commit 5: Implementação do Comando HELP ---
# Adiciona o comando HELP para exibir os comandos disponíveis.

git add includes/command/CommandHandler.hpp sources/command/CommandHandler.cpp
git commit -m "feat(command): Implement HELP command

- Adds the `_handleHelp` function to the CommandHandler.
- Sends a series of NOTICE messages to the client with a list of available commands and their syntax."


# --- Commit 6: Documentação ---
# Adiciona a documentação técnica dos comandos e um guia de testes.

git add readmes/TASK4_COMMANDS.md TESTING_GUIDE.md
git commit -m "docs: Document commands and add testing guide

- Updates `TASK4_COMMANDS.md` with detailed explanations of the JOIN, PRIVMSG, TOPIC, and HELP commands.
- Creates `TESTING_GUIDE.md` with a step-by-step guide on how to connect to the server and test the new features."
